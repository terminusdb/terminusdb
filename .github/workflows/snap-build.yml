# Build Snap
name: Snap Build

on:
  workflow_dispatch:
  workflow_call:
  pull_request:
    paths:
      - ".github/workflows/snap-build.yml"
  
env:
  NODE_VERSION: '20'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    outputs:
      snap: ${{ steps.snapcraft.outputs.snap }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy Sources
        run: rsync -r ./ distribution/terminusdb_source/

      - name: Build
        uses: snapcore/action-build@v1
        id: snapcraft
        with:
          path: distribution

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: terminusdb-snap
          path: ${{ steps.snapcraft.outputs.snap }}
        
  test:
    name: Integration Tests
    needs: 
      - build
    runs-on: ubuntu-latest

    steps:   
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download
        uses: actions/download-artifact@v4
        with:
          name: terminusdb-snap
          path: download_snap/

      - name: Install Snap
        run: sudo snap install download_snap/*.snap --dangerous

      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Init TerminusDB
        run: |
            # Set required environment variables for TerminusDB
            export TERMINUSDB_SERVER_DB_PATH="$HOME/.terminusdb/storage"
            export TERMINUSDB_SERVER_NAME=127.0.0.1
            export TERMINUSDB_SERVER_PORT=6363
            export TERMINUSDB_ADMIN_PASS=root
            
            # Create storage directory
            mkdir -p "$TERMINUSDB_SERVER_DB_PATH"
            
            terminusdb store init --key root
  
      - name: Start TerminusDB
        run: |
            # Set required environment variables for TerminusDB
            export TERMINUSDB_SERVER_DB_PATH="$HOME/.terminusdb/storage"
            export TERMINUSDB_SERVER_NAME=127.0.0.1
            export TERMINUSDB_SERVER_PORT=6363
            export TERMINUSDB_ADMIN_PASS=root
            
            terminusdb serve &
            echo $! > terminusdb.pid
            
            # Wait for server to be ready with proper health check
            # Test the actual API endpoint with authentication to ensure DB is ready
            echo "Waiting for TerminusDB API to be ready..."
            for i in {1..90}; do
              # Test the /api/ok endpoint which requires the full stack to be initialized
              if curl -sf -u admin:root http://127.0.0.1:6363/api/ok > /dev/null 2>&1; then
                echo "TerminusDB API is fully ready after $i seconds"
                break
              fi
              if [ $i -eq 90 ]; then
                echo "ERROR: TerminusDB API failed to initialize after 90 seconds"
                echo "Trying to fetch any available logs..."
                cat /var/snap/terminusdb/common/terminusdb.log 2>/dev/null || echo "No log file found"
                echo "Testing basic HTTP response:"
                curl -v http://127.0.0.1:6363/ || true
                exit 1
              fi
              if [ $((i % 10)) -eq 0 ]; then
                echo "Still waiting... ($i/90 seconds)"
              fi
              sleep 1
            done
            
            # Give it a few more seconds for any async initialization
            echo "API responding, waiting 5 more seconds for full stability..."
            sleep 5
  
      - name: Test
        run: |
          # Set required environment variables for tests
          export TERMINUSDB_SERVER_DB_PATH="$HOME/.terminusdb/storage"
          export TERMINUSDB_SERVER_NAME=127.0.0.1
          export TERMINUSDB_SERVER_PORT=6363
          export TERMINUSDB_ADMIN_PASS=root
          export TERMINUSDB_EXEC_PATH=/snap/bin/terminusdb
          export TERMINUSDB_BASE_URL='http://127.0.0.1:6363'
          
          cd tests && npm i && npm run test

      - name: Stop TerminusDB
        run: |
          kill $(cat terminusdb.pid)      
        
